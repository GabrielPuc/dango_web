{"ast":null,"code":"var _jsxFileName = \"D:\\\\Proys\\\\DangoWebsite\\\\dango_web\\\\src\\\\pages\\\\Reference.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useState } from 'react';\nimport { Card } from \"../components/Card\";\nimport { CollapsableSection } from \"../components/CollapsableSection\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Reference = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n\n  //const contentName = window.location.pathname;\n  const location = useLocation();\n  const {\n    state\n  } = location;\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_URL_SERVER}${state.contentType}`).then(response => {\n      const content = response.data.content;\n      const allGroups = Map.groupBy(content, ({\n        group\n      }) => group);\n      let mapjs = Array.from(allGroups, ([name, value]) => ({\n        name,\n        value\n      }));\n      setGroups(mapjs);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: groups.length > 0 ? groups.map(content => {\n      return /*#__PURE__*/_jsxDEV(CollapsableSection, {\n        title: content.name,\n        content: content.value.map(word => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            symbol: word.symbol,\n            meaning: word.meaning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NO CONTENT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Reference, \"g6K8gNv+G1LAQUc09U0YxtvI6No=\", false, function () {\n  return [useLocation];\n});\n_c = Reference;\nvar _c;\n$RefreshReg$(_c, \"Reference\");","map":{"version":3,"names":["React","useEffect","axios","useState","Card","CollapsableSection","useLocation","jsxDEV","_jsxDEV","Reference","_s","groups","setGroups","location","state","get","process","env","REACT_APP_URL_SERVER","contentType","then","response","content","data","allGroups","Map","groupBy","group","mapjs","Array","from","name","value","children","length","map","title","word","symbol","meaning","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Proys/DangoWebsite/dango_web/src/pages/Reference.js"],"sourcesContent":["import React  from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from 'react';\r\nimport { Card } from \"../components/Card\";\r\nimport { CollapsableSection } from \"../components/CollapsableSection\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport const Reference = () => {\r\n  const [groups, setGroups] = useState([]);\r\n\r\n  //const contentName = window.location.pathname;\r\n  const location = useLocation();\r\n  const { state } = location;\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_URL_SERVER}${state.contentType}`)\r\n  .then(response => {\r\n    const content = response.data.content\r\n    const allGroups = Map.groupBy(content, ({group}) => group);\r\n    let mapjs = Array.from(allGroups, ([name, value]) => ({ name, value }));\r\n\r\n    setGroups(mapjs)\r\n  })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      { groups.length > 0 ? \r\n      groups\r\n        .map(content => {\r\n          return(\r\n            <CollapsableSection\r\n            title={content.name}\r\n            content={\r\n              content.value.map(word => {\r\n                return (\r\n                  <Card\r\n                  symbol={word.symbol}\r\n                  meaning={word.meaning}\r\n              />\r\n                )\r\n              })\r\n              \r\n            }\r\n          />\r\n          )\r\n      })\r\n        :\r\n\r\n        <p>NO CONTENT</p>\r\n    }\r\n    </div>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,MAAO,OAAO;AAC1B,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,oBAAoB;AACzC,SAASC,kBAAkB,QAAQ,kCAAkC;AACrE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMU,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ;EAAM,CAAC,GAAGD,QAAQ;EAE1BZ,SAAS,CAAC,MAAM;IACdC,KAAK,CAACa,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,oBAAqB,GAAEJ,KAAK,CAACK,WAAY,EAAC,CAAC,CACrEC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAI,CAACD,OAAO;MACrC,MAAME,SAAS,GAAGC,GAAG,CAACC,OAAO,CAACJ,OAAO,EAAE,CAAC;QAACK;MAAK,CAAC,KAAKA,KAAK,CAAC;MAC1D,IAAIC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACN,SAAS,EAAE,CAAC,CAACO,IAAI,EAAEC,KAAK,CAAC,MAAM;QAAED,IAAI;QAAEC;MAAM,CAAC,CAAC,CAAC;MAEvEpB,SAAS,CAACgB,KAAK,CAAC;IAClB,CAAC,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,OAAA;IAAAyB,QAAA,EACItB,MAAM,CAACuB,MAAM,GAAG,CAAC,GACnBvB,MAAM,CACHwB,GAAG,CAACb,OAAO,IAAI;MACd,oBACEd,OAAA,CAACH,kBAAkB;QACnB+B,KAAK,EAAEd,OAAO,CAACS,IAAK;QACpBT,OAAO,EACLA,OAAO,CAACU,KAAK,CAACG,GAAG,CAACE,IAAI,IAAI;UACxB,oBACE7B,OAAA,CAACJ,IAAI;YACLkC,MAAM,EAAED,IAAI,CAACC,MAAO;YACpBC,OAAO,EAAEF,IAAI,CAACE;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC;QAEF,CAAC;MAEF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAEN,CAAC,CAAC,gBAGAnC,OAAA;MAAAyB,QAAA,EAAG;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhB,CAAC;AAEV,CAAC;AAACjC,EAAA,CA9CWD,SAAS;EAAA,QAIHH,WAAW;AAAA;AAAAsC,EAAA,GAJjBnC,SAAS;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}